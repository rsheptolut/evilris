ca65 V2.13.2 - (C) Copyright 1998-2005 Ullrich von Bassewitz
Main file   : mytest.s
Current file: mytest.s

000000r 1               ;
000000r 1               ; File generated by cc65 v 2.13.2
000000r 1               ;
000000r 1               	.fopt		compiler,"cc65 v 2.13.2"
000000r 1               	.setcpu		"6502"
000000r 1               	.smart		on
000000r 1               	.autoimport	on
000000r 1               	.case		on
000000r 1               	.debuginfo	off
000000r 1               	.importzp	sp, sreg, regsave, regbank, tmp1, ptr1, ptr2
000000r 1               	.macpack	longbranch
000000r 1               	.forceimport	__STARTUP__
000000r 1               	.export		_bin_palette
000000r 1               	.export		_SetupPPU
000000r 1               	.export		_LoadPalette
000000r 1               	.export		_LoopForever
000000r 1               	.export		_main
000000r 1               
000000r 1               .segment	"RODATA"
000000r 1               
000000r 1               _bin_palette:
000000r 1  09           	.byte	$09
000001r 1  0F           	.byte	$0F
000002r 1  00           	.byte	$00
000003r 1  20           	.byte	$20
000004r 1  09           	.byte	$09
000005r 1  00           	.byte	$00
000006r 1  00           	.byte	$00
000007r 1  00           	.byte	$00
000008r 1  09           	.byte	$09
000009r 1  00           	.byte	$00
00000Ar 1  00           	.byte	$00
00000Br 1  00           	.byte	$00
00000Cr 1  09           	.byte	$09
00000Dr 1  00           	.byte	$00
00000Er 1  00           	.byte	$00
00000Fr 1  00           	.byte	$00
000010r 1  09           	.byte	$09
000011r 1  0F           	.byte	$0F
000012r 1  00           	.byte	$00
000013r 1  20           	.byte	$20
000014r 1  09           	.byte	$09
000015r 1  0F           	.byte	$0F
000016r 1  00           	.byte	$00
000017r 1  05           	.byte	$05
000018r 1  09           	.byte	$09
000019r 1  00           	.byte	$00
00001Ar 1  00           	.byte	$00
00001Br 1  00           	.byte	$00
00001Cr 1  09           	.byte	$09
00001Dr 1  00           	.byte	$00
00001Er 1  00           	.byte	$00
00001Fr 1  00           	.byte	$00
000020r 1               
000020r 1               ; ---------------------------------------------------------------
000020r 1               ; void __near__ SetupPPU (void)
000020r 1               ; ---------------------------------------------------------------
000020r 1               
000020r 1               .segment	"CODE"
000000r 1               
000000r 1               .proc	_SetupPPU: near
000000r 1               
000000r 1               .segment	"CODE"
000000r 1               
000000r 1  A2 00        	ldx     #$00
000002r 1  A9 88        	lda     #$88
000004r 1  8D 00 20     	sta     $2000
000007r 1  A2 00        	ldx     #$00
000009r 1  A9 08        	lda     #$08
00000Br 1  8D 01 20     	sta     $2001
00000Er 1  60           	rts
00000Fr 1               
00000Fr 1               .endproc
00000Fr 1               
00000Fr 1               ; ---------------------------------------------------------------
00000Fr 1               ; void __near__ LoadPalette (void)
00000Fr 1               ; ---------------------------------------------------------------
00000Fr 1               
00000Fr 1               .segment	"CODE"
00000Fr 1               
00000Fr 1               .proc	_LoadPalette: near
00000Fr 1               
00000Fr 1               .segment	"CODE"
00000Fr 1               
00000Fr 1  20 rr rr     	jsr     decsp3
000012r 1  A2 00        	ldx     #$00
000014r 1  A9 3F        	lda     #$3F
000016r 1  8D 06 20     	sta     $2006
000019r 1  A2 00        	ldx     #$00
00001Br 1  A9 00        	lda     #$00
00001Dr 1  8D 06 20     	sta     $2006
000020r 1  A9 rr        	lda     #<(_bin_palette)
000022r 1  A2 rr        	ldx     #>(_bin_palette)
000024r 1  A0 00        	ldy     #$00
000026r 1  20 rr rr     	jsr     staxysp
000029r 1  A2 00        	ldx     #$00
00002Br 1  A9 20        	lda     #$20
00002Dr 1  A0 02        	ldy     #$02
00002Fr 1  91 rr        	sta     (sp),y
000031r 1  A0 02        L002F:	ldy     #$02
000033r 1  B1 rr        	lda     (sp),y
000035r 1  F0 03 4C rr  	jne     L0032
000039r 1  rr           
00003Ar 1  4C rr rr     	jmp     L0030
00003Dr 1  A0 01        L0032:	ldy     #$01
00003Fr 1  20 rr rr     	jsr     ldaxysp
000042r 1  A0 00        	ldy     #$00
000044r 1  20 rr rr     	jsr     ldauidx
000047r 1  8D 07 20     	sta     $2007
00004Ar 1  A0 01        	ldy     #$01
00004Cr 1  20 rr rr     	jsr     ldaxysp
00004Fr 1  85 rr        	sta     regsave
000051r 1  86 rr        	stx     regsave+1
000053r 1  20 rr rr     	jsr     incax1
000056r 1  A0 00        	ldy     #$00
000058r 1  20 rr rr     	jsr     staxysp
00005Br 1  A5 rr        	lda     regsave
00005Dr 1  A6 rr        	ldx     regsave+1
00005Fr 1  A0 02        	ldy     #$02
000061r 1  A2 00        	ldx     #$00
000063r 1  B1 rr        	lda     (sp),y
000065r 1  48           	pha
000066r 1  38           	sec
000067r 1  E9 01        	sbc     #$01
000069r 1  A0 02        	ldy     #$02
00006Br 1  91 rr        	sta     (sp),y
00006Dr 1  68           	pla
00006Er 1  4C rr rr     	jmp     L002F
000071r 1  20 rr rr     L0030:	jsr     incsp3
000074r 1  60           	rts
000075r 1               
000075r 1               .endproc
000075r 1               
000075r 1               ; ---------------------------------------------------------------
000075r 1               ; void __near__ LoopForever (void)
000075r 1               ; ---------------------------------------------------------------
000075r 1               
000075r 1               .segment	"CODE"
000075r 1               
000075r 1               .proc	_LoopForever: near
000075r 1               
000075r 1               .segment	"CODE"
000075r 1               
000075r 1  4C rr rr     L003B:	jmp     L003B
000078r 1  60           	rts
000079r 1               
000079r 1               .endproc
000079r 1               
000079r 1               ; ---------------------------------------------------------------
000079r 1               ; void __near__ main (void)
000079r 1               ; ---------------------------------------------------------------
000079r 1               
000079r 1               .segment	"CODE"
000079r 1               
000079r 1               .proc	_main: near
000079r 1               
000079r 1               .segment	"CODE"
000079r 1               
000079r 1  20 rr rr     	jsr     _SetupPPU
00007Cr 1  20 rr rr     	jsr     _LoadPalette
00007Fr 1  20 rr rr     	jsr     _LoopForever
000082r 1  60           	rts
000083r 1               
000083r 1               .endproc
000083r 1               
000083r 1               
