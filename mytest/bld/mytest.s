;
; File generated by cc65 v 2.13.9
;
	.fopt		compiler,"cc65 v 2.13.9"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.export		_bin_palette
	.export		_SetupPPU
	.export		_LoadPalette
	.export		_LoopForever
	.export		_main

.segment	"RODATA"

_bin_palette:
	.byte	$09
	.byte	$0F
	.byte	$00
	.byte	$20
	.byte	$09
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$0F
	.byte	$00
	.byte	$20
	.byte	$09
	.byte	$0F
	.byte	$00
	.byte	$05
	.byte	$09
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$09
	.byte	$00
	.byte	$00
	.byte	$00

; ---------------------------------------------------------------
; void __near__ SetupPPU (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_SetupPPU: near

.segment	"CODE"

	ldx     #$00
	lda     #$88
	sta     $2000
	ldx     #$00
	lda     #$08
	sta     $2001
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ LoadPalette (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LoadPalette: near

.segment	"CODE"

	jsr     decsp3
	ldx     #$00
	lda     #$3F
	sta     $2006
	ldx     #$00
	lda     #$00
	sta     $2006
	lda     #<(_bin_palette)
	ldx     #>(_bin_palette)
	ldy     #$00
	jsr     staxysp
	ldx     #$00
	lda     #$20
	ldy     #$02
	sta     (sp),y
L002E:	ldy     #$02
	lda     (sp),y
	jne     L0031
	jmp     L002F
L0031:	ldy     #$01
	jsr     ldaxysp
	ldy     #$00
	jsr     ldauidx
	sta     $2007
	ldy     #$01
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$00
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	pha
	sec
	sbc     #$01
	ldy     #$02
	sta     (sp),y
	pla
	jmp     L002E
L002F:	jsr     incsp3
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ LoopForever (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_LoopForever: near

.segment	"CODE"

	jmp     L003C
L003C:	jmp     L003C
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"CODE"

	jsr     _SetupPPU
	jsr     _LoadPalette
	jsr     _LoopForever
	rts

.endproc

